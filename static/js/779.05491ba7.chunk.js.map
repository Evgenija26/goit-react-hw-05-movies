{"version":3,"file":"static/js/779.05491ba7.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAGHC,EAAa,mCAAG,sGACJF,EAAAA,EAAAA,IAAA,qCACSC,EADT,YADI,uBACnBE,EADmB,EACnBA,KADmB,kBAIpBA,GAJoB,2CAAH,qDAObC,EAAiB,mCAAG,WAAMC,GAAN,yFACRL,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBI,IAFZ,uBACvBF,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,sDAQjBG,EAAiB,mCAAG,WAAMC,GAAN,yFACRP,EAAAA,EAAAA,IAAA,gBACZO,EADY,oBACQN,EADR,oBADQ,uBACvBE,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,sDAQjBK,EAAiB,mCAAG,WAAMC,GAAN,yFACRT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,4BAAyCR,IADjC,uBACvBE,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBO,EAAiB,mCAAG,WAAMD,GAAN,yFACRT,EAAAA,EAAAA,IAAA,gBACZS,EADY,4BACUR,EADV,YADQ,uBACvBE,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qD,8ECjCjBQ,EAAS,WACpB,OACE,+BACE,SAAC,KAAD,CACEC,MAAM,UACNC,MAAM,MACNC,SAAS,EACTC,UAAU,2BAIjB,C,wLCXYC,EAAOC,EAAAA,GAAAA,EAAH,kEAIJC,EAAaD,EAAAA,GAAAA,EAAH,6C,SCuCvB,EAtCgB,WACd,OAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQd,GAAOe,EAAAA,EAAAA,MAAPf,GAkBR,OAhBAgB,EAAAA,EAAAA,YAAU,WAAM,wCACd,sGAEIF,GAAW,GAFf,UAG8Bb,EAAAA,EAAAA,IAAkBD,GAHhD,gBAGYiB,EAHZ,EAGYA,QAERL,EAAWK,GALf,gDAOIC,EAAAA,GAAAA,MAAY,wBAPhB,yBASIJ,GAAW,GATf,6EADc,uBAAC,WAAD,wBAadK,EACD,GAAE,CAACnB,KAGF,2BACGa,IAAW,SAACX,EAAA,EAAD,IACQ,IAAnBS,EAAQS,QACP,sCAEAT,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,OAAQtB,EAAX,EAAWA,GAAIuB,EAAf,EAAeA,QAAf,OACV,4BACE,UAAChB,EAAD,sBAAee,MACf,SAACb,EAAD,UAAac,MAFLvB,EADA,MASnB,C","sources":["api.js","components/Loader.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '51152509db377696be1781d05c6af581';\nconst BASE_POSTER_URL = 'https://image.tmdb.org/t/p/';\n\nexport const fetchTrending = async () => {\n  const { data } = await axios.get(\n    `trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n  return data;\n};\n\nexport const fetchSearchMovies = async value => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${value}`\n  );\n\n  return data;\n};\n\nexport const fetchMovieDetails = async movie_id => {\n  const { data } = await axios.get(\n    `movie/${movie_id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const { data } = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&page=1`\n  );\n  return data;\n};\n\nexport const getPosterUrl = (path, size) => BASE_POSTER_URL + size + path;\n","import { FallingLines } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <>\n      <FallingLines\n        color=\"#4fa94d\"\n        width=\"100\"\n        visible={true}\n        ariaLabel=\"falling-lines-loading\"\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Text = styled.p`\n  margin-top: 10px;\n  font-weight: 500;\n`;\nexport const TextReview = styled.p`\n  margin-top: 10px;\n`;\n","import { useState, useEffect } from 'react';\nimport { fetchMovieReviews } from 'api';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader';\nimport { toast } from 'react-toastify';\nimport { Text, TextReview } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function getMovieReviews() {\n      try {\n        setLoading(true);\n        const { results } = await fetchMovieReviews(id);\n\n        setReviews(results);\n      } catch {\n        toast.error('something went wrong');\n      } finally {\n        setLoading(false);\n      }\n    }\n    getMovieReviews();\n  }, [id]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      {reviews.length === 0 ? (\n        <p>no reviews</p>\n      ) : (\n        reviews.map(({ author, id, content }) => (\n          <div key={id}>\n            <Text>Author: {author}</Text>\n            <TextReview>{content}</TextReview>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","API_KEY","fetchTrending","data","fetchSearchMovies","value","fetchMovieDetails","movie_id","fetchMovieCredits","id","fetchMovieReviews","Loader","color","width","visible","ariaLabel","Text","styled","TextReview","useState","reviews","setReviews","loading","setLoading","useParams","useEffect","results","toast","getMovieReviews","length","map","author","content"],"sourceRoot":""}
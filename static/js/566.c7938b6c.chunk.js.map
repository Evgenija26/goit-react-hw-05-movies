{"version":3,"file":"static/js/566.c7938b6c.chunk.js","mappings":"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","sources":["api.js","components/Loader.jsx","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/GoBackLink/GoBackLink.styled.js","components/GoBackLink/GoBackLink.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '51152509db377696be1781d05c6af581';\nconst BASE_POSTER_URL = 'https://image.tmdb.org/t/p/';\n\nexport const fetchTrending = async () => {\n  const { data } = await axios.get(\n    `trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n  return data;\n};\n\nexport const fetchSearchMovies = async value => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${value}`\n  );\n\n  return data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const { data } = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const { data } = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}S&page=1`\n  );\n  return data.results;\n};\n\nexport const getPosterUrl = (path, size) => BASE_POSTER_URL + size + path;\n","import { FallingLines } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <>\n      <FallingLines\n        color=\"#4fa94d\"\n        width=\"100\"\n        visible={true}\n        ariaLabel=\"falling-lines-loading\"\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Poster = styled.div`\n  width: 200px;\n  height: 270px;\n`;\nexport const CardWrapper = styled.div`\n  width: 600px;\n  margin-left: 10px;\n`;\n","import { Poster, CardWrapper } from './MovieCard.styled';\n\nexport const MovieCard = ({ movies }) => {\n  const { poster_path, original_title, vote_average, overview, genres } =\n    movies;\n\n  const useCheck = Math.round(vote_average * 10);\n\n  function getPoster(poster) {\n    if (!poster) {\n      return 'https://upload.wikimedia.org/wikipedia/commons/6/64/Poster_not_available.jpg';\n    } else {\n      return `https://image.tmdb.org/t/p/w300/${poster}`;\n    }\n  }\n\n  return (\n    <>\n      <Poster>\n        <img src={getPoster(poster_path)} alt=\"poster\" />\n      </Poster>\n      <CardWrapper>\n        <h1>{original_title}</h1>\n        <p>User Check: {useCheck}%</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h2>Genres</h2>\n        {genres\n          ? genres.map((genre, index) => <p key={index}>{genre.name}</p>)\n          : 'Genres is not available'}\n      </CardWrapper>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  :hover {\n    color: orangered;\n  }\n`;","import { BsFillReplyAllFill } from 'react-icons/bs';\nimport { StyledLink } from './GoBackLink.styled';\n\nexport const GoBackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <BsFillReplyAllFill size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import { useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Outlet, Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Loader } from 'components/Loader';\nimport { fetchMovieDetails } from 'api';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { GoBackLink } from 'components/GoBackLink/GoBackLink';\n\nconst MovieDetails = () => {\n  const [movies, setMovie] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  useEffect(() => {\n    async function getMovieDetails() {\n      try {\n        setLoading(true);\n        const data = await fetchMovieDetails();\n        setMovie(data.results);\n      } catch {\n        toast.error('something went wrong');\n      } finally {\n      }\n    }\n    getMovieDetails();\n  }, []);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      <GoBackLink to={backLinkHref}>Go Back</GoBackLink>\n      {!loading && <MovieCard movie={movies} />}\n      <Link to={'/reviews'} state={{ from: backLinkHref }}>\n        Reviews\n      </Link>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","API_KEY","fetchTrending","data","fetchSearchMovies","value","fetchMovieDetails","id","fetchMovieCredits","fetchMovieReviews","results","Loader","color","width","visible","ariaLabel","Poster","styled","CardWrapper","MovieCard","poster","movies","poster_path","original_title","vote_average","overview","genres","useCheck","Math","round","src","alt","map","genre","index","name","StyledLink","Link","GoBackLink","to","children","size","useState","setMovie","loading","setLoading","backLinkHref","useLocation","state","from","useEffect","toast","getMovieDetails","movie"],"sourceRoot":""}